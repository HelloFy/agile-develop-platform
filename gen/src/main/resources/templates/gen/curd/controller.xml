<?xml version="1.0" encoding="utf-8"?>
<template>
    <name>controller</name>
    <filePath>src/main/java/${packageName}/web/${moduleName}/${subModuleName}</filePath>
    <fileName>${ClassName}Controller.java</fileName>
    <content><![CDATA[
/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package ${packageName}.web.${moduleName}<#if subModuleName != "">.${subModuleName}</#if>;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import java.util.List;

import cn.edu.xidian.platform.commons.entity.Message;
import ${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>.${ClassName};
import ${packageName}.${moduleName}.service<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Service;

/**
 * ${functionName}Controller
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@RestController
@RequestMapping(value = "${moduleName}")
public class ${ClassName}Controller {

	@Autowired
	private ${ClassName}Service ${className}Service;


	@ExceptionHandler(Exception.class)
    public Message exceptionHandler(Exception ex) {
        Message message = new Message();
        message.setResult(Message.MessageResult.FAIL);
        message.setMessage("服务器繁忙");
        message.setErrorMsg("服务器繁忙");
        return message;
    }

    @RequestMapping(value = "get${ClassName}List",method = RequestMethod.GET)
	public Message get${ClassName}List(${ClassName} ${className}) {
		Message message = new Message();
        message.setResult(Message.MessageResult.SUCCESS);
        PageHelper.startPage(${className}.getPage(), ${className}.getPageSize());
        List<${ClassName}> ${className}PageList = ${className}Service.findList(${className});
        PageInfo<${ClassName}> pageInfo = new PageInfo<>(${className}PageList);
        message.setMessage(pageInfo);
        return message ;
	}

	@RequestMapping(value = "${className}Form",method = RequestMethod.GET)
	public ModelAndView form() {
		return new ModelAndView("${moduleName}/${moduleName}${ClassName}Form");
	}

	@RequestMapping(value = "save${ClassName}",method = RequestMethod.PUT)
	public Message save(${ClassName} ${className}) {
		Message message = new Message();
        message.setResult(Message.MessageResult.SUCCESS);
		${className}Service.saveOrUpdate(${className});
		return message;
	}
	
	@RequestMapping(value = "delete${ClassName}",method = RequestMethod.DELETE)
	public Message delete(${ClassName} ${className}) {
		Message message = new Message();
        message.setResult(Message.MessageResult.SUCCESS);
		${className}Service.delete(${className});
		return message;
	}

}]]>
    </content>
</template>